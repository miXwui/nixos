# NOTES:

# Enable service and start:
# `sudo systemctl enable keyd && sudo systemctl start keyd.service`

# Reload config
# `sudo keyd reload`

# Show/debug keypresses
# `sudo keyd monitor`

# Show/debug layers
# `sudo keyd listen`

# IMPORTANT: ordering of certain things matters.

## BEGIN CONFIG ##
[ids]

0001:0001

##### GLOBALS #####

[global]

# Turn the capslock light on whenever a layer is active.
#
# Tested working in Gnome. But in SwayWM, toggling capslock correctly toggles
# the led indicator, but toggling other layers doesn't toggle the led correctly
# and instead causes it to briefly flash.
#
# This might be fixed in the next release after wlroots 0.16.2 when it includes
# this fix: https://gitlab.freedesktop.org/wlroots/wlroots/-/merge_requests/3867
# More info:
# - https://github.com/swaywm/sway/issues/7451
# - https://gitlab.freedesktop.org/wlroots/wlroots/-/issues/3550
#
# Fine grained layer indicator feature request:
# https://github.com/rvaiya/keyd/issues/413
layer_indicator = 1

# Ignore the tap behavior of an overloaded key if it is held
# for a time period in milliseconds.
# overload_tap_timeout = 150

##### MAIN LAYER #####

[main]

# Need to explicitly set rightshift/rightcontrol
# to override the default layers.
# See: https://github.com/rvaiya/keyd/issues/369#issuecomment-1301574908
# Or instead here, need to set rightcontrol layer before layer(control)
# overrides it below (untested theory but this works).

# Swap rightcontrol to alt layer.
rightcontrol = rightcontrol

# Set rightshift to oneshot homenumsym when pressed and shift when held.
# rightshift = overload(shift, oneshot(homenumsym))

# Set leftalt to meta
leftalt = layer(meta)
# Set rightalt to surface alt layer.
rightalt = layer(raiselayer)

# Set meta key to alt
# Note: it seems like when leftmeta and leftalt are swapped
# on the Framework laptop, pressing leftmeta+shift+rightalt(raiselayer)
# doesn't trigger raiselayer. Perhaps pressing the physical
# leftalt+rightalt+a third modifer key doesn't work and might this
# may be a firmware issue.
meta = layer(alt)

# Maps capslock to clear()+esc while pressed and control when held.
# Using `overloadt` along with global `overload_tap_timeout` to only
# emit leftcontrol first OR esc second.
# capslock = overloadt(control, clearm(macro(esc)), 150)
# Maps capslock to control
capslock = layer(control)

# Clear all set layers when esc is pressed (esc itself is noop).
esc = clearm(esc)

left = layer(leftarrowlayer)

y = -
u = y
i = u
o = i
p = o
[ = p
] = [
\ = ]

h = ;
j = h
k = j
l = k
; = l

n = /
m = n
, = m
. = ,
/ = .

1 = \
2 = 1
3 = 2
4 = 3
5 = 4
6 = 5
7 = =
8 = 6
9 = 7
0 = 8
- = 9
= = 0

##### ALT LAYER #####

[raiselayer]
## left cluster 
z = esc
# Undo
x = C-z
# Redo
c = C-S-z
# Navigation and Tabs
e = S-tab
s = C-S-tab
d = tab
f = C-tab

## right cluster
o = up
k = left
l = down
; = right
i = home
p = end
u = pageup
j = pagedown

## Function keys
2 = f1
3 = f2
4 = f3
5 = f4
6 = f5
8 = f6
9 = f7
0 = f8
- = f9
= = f10
y = f11
7 = f12

[leftarrowlayer]
k = A-left
; = A-right

# Media
[ = playpause
] = volumedown
\ = volumeup
, = mute
q = brightnessdown
w = brightnessup

## compose macros
y = macro(compose ---)
c = macro(compose o c)
d = macro(compose o o)
r = macro(compose o r)
t = macro(compose t m)

# Ctrl+Shift+Alt+raiselayer doesn't work (maybe because of key rollover?) so
# we're going to map it to ijkl (remapped to qwerty okl;)
[control+shift+alt]
o = C-S-A-up
k = C-S-A-left
l = C-S-A-down
; = C-S-A-right

##### HOME NUM SYM LAYER #####

# [homenumsym]
# 
# a = 1
# s = 2
# d = 3
# f = 4
# g = 5
# h = 6
# j = 7
# k = 8
# l = 9
# ; = 0
# 
# S-a = !
# S-s = @
# S-d = #
# S-f = $
# S-g = 5
# S-h = ^
# S-j = &
# S-k = *
# S-l = (
# S-; = )

##### DOUBLE SHIFT HOME SYM LAYER #####

[shift]
leftshift = layer(homesym)
rightshift = layer(homesym)
backspace = delete

[homesym]
a = !
s = @
d = #
f = $
g = 5
h = ^
j = &
k = *
l = (
; = )

backspace = S-delete

##### VSCODE SHORTCUTS #####
# TODO: use per app configurations 
# see `man keyd`

[raiselayer]
## Select within bracket
#a = A-a
#
## Add selection to find match
#d = C-d
#
## Clear terminal
#. = C-A-.
#
## Un/wrap text
#w = A-z
#
## Open explorer
#e = C-S-e
#
## Open Git
#g = C-S-g
#
## Open/close sidebar
#b = C-S-b

[control+alt]
# VSCode Bookmarks
e = S-A-f8
s = S-A-f5
d = A-f8
f = A-f5

# VSCode A-f5 next change, A-f8 next problem 
i =  noop
j =  C-A-j
k =  C-A-k
l =  C-A-l

# Smart select grow/shrink
[ = macro(A-S-left)
] = macro(A-S-right)

